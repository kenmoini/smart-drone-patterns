name: Build App Container - Drone Control
on:
  push:
    branches:
      - main
    paths:
      - apps/drone-control/**
      - .github/workflows/build-app-drone-control.yml

  # Schedule workflow run at 00:00 on Sunday
  schedule:
    - cron: '0 2 * * 0'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  # Build the container
  build-container:
    name: Build Container
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:

    - name: Check out code
      uses: actions/checkout@v4

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3
      with:
        platforms: arm64,amd64

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Docker meta
      id: meta
      uses: docker/metadata-action@v5
      with:
        # list of Docker images to use as base name for tags
        images: |
          quay.io/kenmoini/drone-control
        # generate Docker tags based on the following events/attributes
        tags: |
          type=schedule
          type=ref,event=branch
          type=ref,event=tag
          type=sha,prefix=,suffix=,format=short
          type=sha,prefix=,suffix=,format=long
          type=raw,value=latest

    - name: Login to RH Container Registry
      uses: docker/login-action@v3
      with:
        registry: registry.redhat.io
        username: "${{ secrets.RH_REGISTRY_USER }}"
        password: "${{ secrets.RH_REGISTRY_TOKEN }}"

    - name: Login to Quay Container Registry
      uses: docker/login-action@v3
      with:
        registry: quay.io
        username: "${{ secrets.REGISTRY_USERNAME }}"
        password: "${{ secrets.REGISTRY_TOKEN }}"

    - name: Build and push
      uses: docker/build-push-action@v5
      with:
        context: ./apps/drone-control/
        file: ./apps/drone-control/Containerfile
        labels: ${{ steps.meta.outputs.labels }}
        tags: ${{ steps.meta.outputs.tags }}
        push: true
        cache-from: type=gha
        cache-to: type=gha,mode=max
        platforms: linux/amd64, linux/arm64
