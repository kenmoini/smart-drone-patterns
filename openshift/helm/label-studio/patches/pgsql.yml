---
apiVersion: v1
kind: Secret
metadata:
  name: ls-postgres-configuration
stringData:
  host: postgresql
  port: "5432"
  database: postgres
  username: postgres
  password: postgres
  type: unmanaged
type: Opaque
---
kind: Service
apiVersion: v1
metadata:
  name: ls-postgresql
  labels:
    app.kubernetes.io/component: database
    app.kubernetes.io/name: postgres-13
spec:
  clusterIP: None
  ipFamilies:
    - IPv4
  ports:
    - protocol: TCP
      port: 5432
      targetPort: 5432
  internalTrafficPolicy: Cluster
  clusterIPs:
    - None
  type: ClusterIP
  ipFamilyPolicy: SingleStack
  sessionAffinity: None
  selector:
    app.kubernetes.io/component: database
    app.kubernetes.io/name: postgres-13
---
kind: StatefulSet
apiVersion: apps/v1
metadata:
  name: ls-postgres
  labels:
    app.kubernetes.io/component: database
    app.kubernetes.io/name: postgres-13
spec:
  replicas: 1
  serviceName: postgres
  selector:
    matchLabels:
      app.kubernetes.io/component: database
      app.kubernetes.io/name: postgres-13
  template:
    metadata:
      labels:
        app.kubernetes.io/component: database
        app.kubernetes.io/name: postgres-13
    spec:
      serviceAccountName: ls-postgres
      containers:
        - resources:
            requests:
              cpu: 10m
              memory: 64Mi
          terminationMessagePath: /dev/termination-log
          name: postgres
          env:
            - name: POSTGRESQL_DATABASE
              valueFrom:
                secretKeyRef:
                  name: ls-postgres-configuration
                  key: database
            - name: POSTGRESQL_USER
              valueFrom:
                secretKeyRef:
                  name: ls-postgres-configuration
                  key: username
            - name: POSTGRESQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: ls-postgres-configuration
                  key: password
            - name: POSTGRES_DB
              valueFrom:
                secretKeyRef:
                  name: ls-postgres-configuration
                  key: database
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: ls-postgres-configuration
                  key: username
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: ls-postgres-configuration
                  key: password
            - name: PGDATA
              value: /var/lib/pgsql/data/userdata
            - name: POSTGRES_INITDB_ARGS
              value: '--auth-host=scram-sha-256'
            - name: POSTGRES_HOST_AUTH_METHOD
              value: scram-sha-256
          ports:
            - name: postgres-13
              containerPort: 5432
              protocol: TCP
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: postgres-13
              mountPath: /var/lib/pgsql/data
              subPath: data
          terminationMessagePolicy: File
          image: registry.redhat.io/rhel8/postgresql-13@sha256:cf0c33620cf579c7fb25e7787c1e73cc916becf3e33b7f5f52912a49a00c47a8
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      securityContext:
        fsGroup: 999
      schedulerName: default-scheduler
  volumeClaimTemplates:
    - kind: PersistentVolumeClaim
      apiVersion: v1
      metadata:
        name: postgres-13
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 8Gi
        volumeMode: Filesystem
        hostPath:
          path: /var/lib/pgsql/data
  updateStrategy:
    type: RollingUpdate
  revisionHistoryLimit: 10
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: ls-postgres
---
## RB to let the nginx-ingress SA to use the SCC
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: ls-postgres
subjects:
  - kind: ServiceAccount
    name: default
    namespace: label-studio
  - kind: ServiceAccount
    name: ls-postgres
    namespace: label-studio
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: 'system:openshift:scc:nonroot'