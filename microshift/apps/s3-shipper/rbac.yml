---
## Custom SCC for S3 Shipper
apiVersion: security.openshift.io/v1
kind: SecurityContextConstraints
metadata:
  annotations:
    kubernetes.io/description: Provides all features of the restricted SCC but allows users to run with any UID and any GID, in addition to binding to privileged ports
  generation: 1
  name: anyuid-hostpath
allowHostDirVolumePlugin: true
allowHostIPC: false
allowHostNetwork: false
allowHostPID: false
allowHostPorts: false
allowPrivilegeEscalation: true
allowPrivilegedContainer: false
allowedCapabilities:
  - NET_BIND_SERVICE
defaultAddCapabilities: null
fsGroup:
  type: RunAsAny
groups:
- system:cluster-admins
users:
- system:serviceaccount:s3-shipper:s3-shipper
priority: 10
readOnlyRootFilesystem: true
requiredDropCapabilities:
- ALL
runAsUser:
  type: RunAsAny
seLinuxContext:
  type: MustRunAs
supplementalGroups:
  type: RunAsAny
volumes:
- configMap
- downwardAPI
- emptyDir
- hostPath
- persistentVolumeClaim
- projected
- secret
seccompProfiles:    
- runtime/default
---
## CR to allow use of the SCC
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: 'system:openshift:scc:anyuid-hostpath'
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: 'true'
rules:
  - verbs:
      - use
    apiGroups:
      - security.openshift.io
    resources:
      - securitycontextconstraints
    resourceNames:
      - anyuid-hostpath
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: s3-shipper
  namespace: s3-shipper
---
## RB to let the nginx-ingress SA to use the SCC
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: s3-shipper-hostpath
  namespace: s3-shipper
subjects:
  - kind: ServiceAccount
    name: s3-shipper
    namespace: s3-shipper
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: 'system:openshift:scc:anyuid-hostpath'